{"version":3,"sources":["Iterruptores.js","App.js","index.js"],"names":["Interruptores","props","React","useState","values","state","setState","lastCheck","setLastCheck","handleChange","event","nchecks","slice","target","name","checked","textTyping","value","useEffect","count","forEach","check","countChecks","rand","Math","floor","random","length","String","changeSomeState","className","map","index","Switch","onChange","color","TextField","type","placeholder","defaultValue","style","defaultValues","App","AppBar","position","background","padding","Toolbar","Typography","variant","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAMe,SAASA,EAAcC,GAAQ,IAAD,EAEfC,IAAMC,SAASF,EAAMG,QAFN,mBAElCC,EAFkC,KAE3BC,EAF2B,OAIPJ,IAAMC,SAAS,KAJR,mBAIlCI,EAJkC,KAIvBC,EAJuB,KA0BzC,IAAMC,EAAe,SAACC,GAClB,IAAIC,EAAUN,EAAMO,QACpBD,EAAQD,EAAMG,OAAOC,MAAM,GAAKJ,EAAMG,OAAOE,QAC7CT,EAASK,GACTH,EAAaE,EAAMG,OAAOC,OAGxBE,EAAa,SAACN,GAChB,IAAIC,EAAUN,EAAMO,QACpBD,EAAQD,EAAMG,OAAOC,MAAM,GAAKJ,EAAMG,OAAOI,MAC7CX,EAASK,IAcb,OAXAT,IAAMgB,WACF,WAEI,GAAa,IApCrB,WACI,IAAIC,EAAQ,EAEZ,OADAd,EAAMe,SAAQ,SAACC,GAAD,OAAYA,EAAM,GAAMF,IAAUA,KACzCA,EAgCWG,GACC,CACX,IAAMX,EA/BlB,WACI,IAAIA,EAAUN,EAAMO,QAEhBW,EAAO,EACX,GACIA,EAAOC,KAAKC,MAAMD,KAAKE,SAAWf,EAAQgB,cAExCC,OAAOL,KAAUhB,GAIvB,OAFAI,EAAQY,GAAM,IAAK,EAEZZ,EAoBiBkB,GAChBvB,EAASK,MAGjB,CAACN,IAID,oBAAIyB,UAAU,gBAAd,SACIzB,EAAM0B,KAAK,SAAC1B,EAAO2B,GAAR,OACP,+BACI,cAACC,EAAA,EAAD,CACInB,KAAMc,OAAOI,GACbjB,QAASV,EAAM,GACf6B,SAAUzB,EACV0B,MAAM,cAEV,cAACC,EAAA,EAAD,CACItB,KAAMc,OAAOI,GACbK,KAAK,OACLH,SAAUlB,EACVsB,YAAY,gCACZC,aAAclC,EAAM,GACpBmC,MAAO,CAACL,MAAM,aAbbH,Q,4BCtDnBS,EAAgB,CAClB,CAAC,SAAU,GACX,CAAC,QAAS,GACV,CAAC,QAAS,IAoBCC,MAjBf,WAEE,OACE,sBAAKZ,UAAU,MAAf,UACE,cAACa,EAAA,EAAD,CAAQR,MAAM,UAAUS,SAAS,SAASJ,MAAO,CAAEK,WAAY,UAAWC,QAAU,UAApF,SACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKd,MAAM,UAA/B,oCAKJ,cAAC,EAAD,CAAe/B,OAAQqC,QCjB7BS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.de3c677f.chunk.js","sourcesContent":["import React from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport './Interruptores.css';\n\nexport default function Interruptores(props) {\n    \n    const [state, setState] = React.useState(props.values);\n\n    const [lastCheck, setLastCheck] = React.useState('0');\n\n    function countChecks(){\n        var count = 0;\n        state.forEach((check) => (check[1]) ? count++ : count);\n        return count;\n    }\n\n    function changeSomeState(){\n        let nchecks = state.slice();\n\n        let rand = 0;\n        do{\n            rand = Math.floor(Math.random() * nchecks.length);\n        }\n        while(String(rand) === lastCheck);\n\n        nchecks[rand][1] = false;\n\n        return nchecks;\n    }\n\n    const handleChange = (event) => {\n        let nchecks = state.slice();\n        nchecks[event.target.name][1] = event.target.checked;\n        setState(nchecks);\n        setLastCheck(event.target.name);\n    };\n\n    const textTyping = (event) => {\n        let nchecks = state.slice();\n        nchecks[event.target.name][0] = event.target.value;\n        setState(nchecks);\n    };\n\n    React.useEffect(\n        () => {\n            const count = countChecks();\n            if(count === 3){\n                const nchecks = changeSomeState();\n                setState(nchecks);\n            }\n        }, \n        [state]\n    );\n\n    return(\n        <ul className=\"Interruptores\">\n           {state.map( (state, index) =>\n                <li key={index}>\n                    <Switch\n                        name={String(index)}\n                        checked={state[1]}\n                        onChange={handleChange}\n                        color=\"secondary\"\n                    />\n                    <TextField\n                        name={String(index)}\n                        type=\"text\"\n                        onChange={textTyping} \n                        placeholder=\"Escriba una caracterÃ­stica\"\n                        defaultValue={state[0]}\n                        style={{color:\"white\"}}\n                    />\n                </li>\n           )}\n        </ul>\n    );\n\n}","import Interruptores from './Iterruptores';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport Toolbar from '@material-ui/core/Toolbar'\n\nconst defaultValues = [\n    ['cheap' , false],\n    ['fast' , false],\n    ['good' , false]\n];\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <AppBar color=\"primary\" position=\"static\" style={{ background: \"#e05297\", padding : \"0.7rem\" }}>\n        <Toolbar>\n          <Typography variant=\"h3\" color=\"inherit\">\n            Cheap, Good & Fast\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Interruptores values={defaultValues}/>\n    </div>\n  );\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}